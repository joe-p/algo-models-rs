/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SimulateTransaction200Response {
    #[serde(rename = "eval-overrides", skip_serializing_if = "Option::is_none")]
    pub eval_overrides: Option<Box<models::SimulationEvalOverrides>>,
    #[serde(rename = "exec-trace-config", skip_serializing_if = "Option::is_none")]
    pub exec_trace_config: Option<Box<models::SimulateTraceConfig>>,
    #[serde(rename = "initial-states", skip_serializing_if = "Option::is_none")]
    pub initial_states: Option<Box<models::SimulateInitialStates>>,
    /// The round immediately preceding this simulation. State changes through this round were used to run this simulation.
    #[serde(rename = "last-round")]
    pub last_round: i32,
    /// A result object for each transaction group that was simulated.
    #[serde(rename = "txn-groups")]
    pub txn_groups: Vec<models::SimulateTransactionGroupResult>,
    /// The version of this response object.
    #[serde(rename = "version")]
    pub version: i32,
}

impl SimulateTransaction200Response {
    pub fn new(last_round: i32, txn_groups: Vec<models::SimulateTransactionGroupResult>, version: i32) -> SimulateTransaction200Response {
        SimulateTransaction200Response {
            eval_overrides: None,
            exec_trace_config: None,
            initial_states: None,
            last_round,
            txn_groups,
            version,
        }
    }
}

