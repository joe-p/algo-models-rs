/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DryrunState : Stores the TEAL eval step data
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DryrunState {
    /// Evaluation error if any
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<String>,
    /// Line number
    #[serde(rename = "line")]
    pub line: i32,
    /// Program counter
    #[serde(rename = "pc")]
    pub pc: i32,
    #[serde(rename = "scratch", skip_serializing_if = "Option::is_none")]
    pub scratch: Option<Vec<models::TealValue>>,
    #[serde(rename = "stack")]
    pub stack: Vec<models::TealValue>,
}

impl DryrunState {
    /// Stores the TEAL eval step data
    pub fn new(line: i32, pc: i32, stack: Vec<models::TealValue>) -> DryrunState {
        DryrunState {
            error: None,
            line,
            pc,
            scratch: None,
            stack,
        }
    }
}

