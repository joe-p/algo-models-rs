/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ApplicationKvStorage : An application's global/local/box state.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationKvStorage {
    /// The address of the account associated with the local state.
    #[serde(rename = "account", skip_serializing_if = "Option::is_none")]
    pub account: Option<String>,
    /// Key-Value pairs representing application states.
    #[serde(rename = "kvs")]
    pub kvs: Vec<models::AvmKeyValue>,
}

impl ApplicationKvStorage {
    /// An application's global/local/box state.
    pub fn new(kvs: Vec<models::AvmKeyValue>) -> ApplicationKvStorage {
        ApplicationKvStorage {
            account: None,
            kvs,
        }
    }
}

