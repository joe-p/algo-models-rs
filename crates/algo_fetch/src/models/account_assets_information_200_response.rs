/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountAssetsInformation200Response {
    #[serde(rename = "asset-holdings", skip_serializing_if = "Option::is_none")]
    pub asset_holdings: Option<Vec<models::AccountAssetHolding>>,
    /// Used for pagination, when making another request provide this token with the next parameter.
    #[serde(rename = "next-token", skip_serializing_if = "Option::is_none")]
    pub next_token: Option<String>,
    /// The round for which this information is relevant.
    #[serde(rename = "round")]
    pub round: i32,
}

impl AccountAssetsInformation200Response {
    pub fn new(round: i32) -> AccountAssetsInformation200Response {
        AccountAssetsInformation200Response {
            asset_holdings: None,
            next_token: None,
            round,
        }
    }
}

