/*
 * Algod REST API.
 *
 * API endpoint for algod operations.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@algorand.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccountAssetHolding : AccountAssetHolding describes the account's asset holding and asset parameters (if either exist) for a specific asset ID.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountAssetHolding {
    #[serde(rename = "asset-holding")]
    pub asset_holding: Box<models::AssetHolding>,
    #[serde(rename = "asset-params", skip_serializing_if = "Option::is_none")]
    pub asset_params: Option<Box<models::AssetParams>>,
}

impl AccountAssetHolding {
    /// AccountAssetHolding describes the account's asset holding and asset parameters (if either exist) for a specific asset ID.
    pub fn new(asset_holding: models::AssetHolding) -> AccountAssetHolding {
        AccountAssetHolding {
            asset_holding: Box::new(asset_holding),
            asset_params: None,
        }
    }
}

